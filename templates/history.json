{
    "description": "Raw codediff + vcc msgs.",
    "prompt": "Give a short commit message for code from git diff:\n  --- String.cpp\n+++ String.cpp\n@@ -149,6 +149,8 @@ CString CString::Format(const CString& sFormatStr, ...) {\n \treturn \"\";\n }\n \n+CString CString::ToString(char c) { stringstream s; s << c; return s.str(); }\n+CString CString::ToString(unsigned char c) { stringstream s; s << c; return s.str(); }\n CString CString::ToString(short i) { stringstream s; s << i; return s.str(); }\n CString CString::ToString(unsigned short i) { stringstream s; s << i; return s.str(); }\n CString CString::ToString(int i) { stringstream s; s << i; return s.str(); }\n\n--- String.h\n+++ String.h\n@@ -31,6 +31,8 @@ public:\n \n \tstatic CString Format(const CString& sFormatStr, ...);\n \n+\tstatic CString ToString(char c);\n+\tstatic CString ToString(unsigned char c);\n \tstatic CString ToString(short i);\n \tstatic CString ToString(unsigned short i);\n \tstatic CString ToString(int i);\n\n---\nShort commit message:\nAdded ToString() overloads for char and unsigned char",
    "prompt_input": "Give a short commit message for code from git diff:\n  --- String.cpp\n+++ String.cpp\n@@ -149,6 +149,8 @@ CString CString::Format(const CString& sFormatStr, ...) {\n \treturn \"\";\n }\n \n+CString CString::ToString(char c) { stringstream s; s << c; return s.str(); }\n+CString CString::ToString(unsigned char c) { stringstream s; s << c; return s.str(); }\n CString CString::ToString(short i) { stringstream s; s << i; return s.str(); }\n CString CString::ToString(unsigned short i) { stringstream s; s << i; return s.str(); }\n CString CString::ToString(int i) { stringstream s; s << i; return s.str(); }\n\n--- String.h\n+++ String.h\n@@ -31,6 +31,8 @@ public:\n \n \tstatic CString Format(const CString& sFormatStr, ...);\n \n+\tstatic CString ToString(char c);\n+\tstatic CString ToString(unsigned char c);\n \tstatic CString ToString(short i);\n \tstatic CString ToString(unsigned short i);\n \tstatic CString ToString(int i);\n\n---\nShort commit message:\n",
    "response_split": "Short commit message:"
}